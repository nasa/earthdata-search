import { getCollectionGeoFeatures } from '../spatial'

describe('getCollectionGeoFeatures', () => {
  describe('when the collection metadata has multiple spatial features', () => {
    test('returns the collection of geo features based on the collection metadata', () => {
      const metadata = {
        boxes: [
          '-6.17041 -18.28125 32.62583 60'
        ],
        coordinateSystem: 'CARTESIAN',
        lines: [
          '-14.07 -0.37 1.27 4.75',
          '44.9778 -93.265 47.6062 -122.3321'
        ],
        points: null,
        gibsLayers: 'None',
        spatial: [
          'Bounding Rectangle: (32.62583°, -18.28125°, -6.17041°, 60.0°)\n',
          'Line: ((-14.07°, -0.37°), (1.27°, 4.75°))\n',
          'Line: ((44.9778°, -93.265°), (47.6062°, -122.3321°))\n'
        ]
      }

      const response = getCollectionGeoFeatures(metadata)

      expect(response).toEqual([{
        type: 'Feature',
        properties: {},
        geometry: {
          type: 'MultiPolygon',
          coordinates: [
            [
              [
                [-18.28125, -6.17041],
                [-15.8349609375, -6.17041],
                [-13.388671875, -6.17041],
                [-10.9423828125, -6.17041],
                [-8.49609375, -6.17041],
                [-6.0498046875, -6.17041],
                [-3.603515625, -6.17041],
                [-1.1572265625, -6.17041],
                [1.2890625, -6.17041],
                [3.7353515625, -6.17041],
                [6.181640625, -6.17041],
                [8.6279296875, -6.17041],
                [11.07421875, -6.17041],
                [13.5205078125, -6.17041],
                [15.966796875, -6.17041],
                [18.4130859375, -6.17041],
                [20.859375, -6.17041],
                [23.3056640625, -6.17041],
                [25.751953125, -6.17041],
                [28.1982421875, -6.17041],
                [30.64453125, -6.17041],
                [33.0908203125, -6.17041],
                [35.537109375, -6.17041],
                [37.9833984375, -6.17041],
                [40.4296875, -6.17041],
                [42.8759765625, -6.17041],
                [45.322265625, -6.17041],
                [47.7685546875, -6.17041],
                [50.21484375, -6.17041],
                [52.6611328125, -6.17041],
                [55.107421875, -6.17041],
                [57.5537109375, -6.17041],
                [60, -6.17041],
                [60, -3.7456450000000006],
                [60, -1.3208800000000003],
                [60, 1.1038849999999998],
                [60, 3.52865],
                [60, 5.953415],
                [60, 8.37818],
                [60, 10.802945000000001],
                [60, 13.22771],
                [60, 15.652474999999999],
                [60, 18.07724],
                [60, 20.502005],
                [60, 22.92677],
                [60, 25.351535],
                [60, 27.7763],
                [60, 30.201065],
                [60, 32.62583],
                [55.107421875, 32.62583],
                [50.21484375, 32.62583],
                [45.322265625, 32.62583],
                [40.4296875, 32.62583],
                [35.537109375, 32.62583],
                [30.64453125, 32.62583],
                [25.751953125, 32.62583],
                [20.859375, 32.62583],
                [15.966796875, 32.62583],
                [11.07421875, 32.62583],
                [6.181640625, 32.62583],
                [1.2890625, 32.62583],
                [-3.603515625, 32.62583],
                [-8.49609375, 32.62583],
                [-13.388671875, 32.62583],
                [-18.28125, 32.62583],
                [-18.28125, 30.201065],
                [-18.28125, 27.7763],
                [-18.28125, 25.351535],
                [-18.28125, 22.92677],
                [-18.28125, 20.502005],
                [-18.28125, 18.07724],
                [-18.28125, 15.652474999999999],
                [-18.28125, 13.22771],
                [-18.28125, 10.802945000000001],
                [-18.28125, 8.37818],
                [-18.28125, 5.953415],
                [-18.28125, 3.52865],
                [-18.28125, 1.1038849999999998],
                [-18.28125, -1.3208800000000003],
                [-18.28125, -3.7456450000000006],
                [-18.28125, -6.17041]
              ]
            ]
          ]
        }
      }, {
        type: 'Feature',
        properties: {},
        geometry: {
          type: 'MultiLineString',
          coordinates: [
            [
              [-0.37, -14.07],
              [4.75, 1.27]
            ],
            [
              [-93.265, 44.9778],
              [-122.3321, 47.6062]
            ]
          ]
        }
      }])
    })
  })

  describe('when the collection metadata has a single spatial feature', () => {
    describe('when the spatial feature is a bounding box', () => {
      test('returns normalized feature collection', () => {
        const metadata = {
          boxes: ['-56 -180 60 180'],
          coordinateSystem: 'CARTESIAN',
          lines: null,
          points: null,
          polygons: null,
          gibsLayers: 'None',
          spatial: null
        }
        const featureCollectionMock = [
          {
            type: 'Feature',
            properties: {},
            geometry: {
              type: 'MultiPolygon',
              coordinates: [
                [
                  [
                    [-180, -56],
                    [-174.375, -56],
                    [-168.75, -56],
                    [-163.125, -56],
                    [-157.5, -56],
                    [-151.875, -56],
                    [-146.25, -56],
                    [-140.625, -56],
                    [-135, -56],
                    [-129.375, -56],
                    [-123.75, -56],
                    [-118.125, -56],
                    [-112.5, -56],
                    [-106.875, -56],
                    [-101.25, -56],
                    [-95.625, -56],
                    [-90, -56],
                    [-84.375, -56],
                    [-78.75, -56],
                    [-73.125, -56],
                    [-67.5, -56],
                    [-61.875, -56],
                    [-56.25, -56],
                    [-50.625, -56],
                    [-45, -56],
                    [-39.375, -56],
                    [-33.75, -56],
                    [-28.125, -56],
                    [-22.5, -56],
                    [-16.875, -56],
                    [-11.25, -56],
                    [-5.625, -56],
                    [0, -56],
                    [5.625, -56],
                    [11.25, -56],
                    [16.875, -56],
                    [22.5, -56],
                    [28.125, -56],
                    [33.75, -56],
                    [39.375, -56],
                    [45, -56],
                    [50.625, -56],
                    [56.25, -56],
                    [61.875, -56],
                    [67.5, -56],
                    [73.125, -56],
                    [78.75, -56],
                    [84.375, -56],
                    [90, -56],
                    [95.625, -56],
                    [101.25, -56],
                    [106.875, -56],
                    [112.5, -56],
                    [118.125, -56],
                    [123.75, -56],
                    [129.375, -56],
                    [135, -56],
                    [140.625, -56],
                    [146.25, -56],
                    [151.875, -56],
                    [157.5, -56],
                    [163.125, -56],
                    [168.75, -56],
                    [174.375, -56],
                    [180, -56],
                    [180, -52.375],
                    [180, -48.75],
                    [180, -45.125],
                    [180, -41.5],
                    [180, -37.875],
                    [180, -34.25],
                    [180, -30.625],
                    [180, -27],
                    [180, -23.375],
                    [180, -19.75],
                    [180, -16.125],
                    [180, -12.5],
                    [180, -8.875],
                    [180, -5.25],
                    [180, -1.625],
                    [180, 2],
                    [180, 5.625],
                    [180, 9.25],
                    [180, 12.875],
                    [180, 16.5],
                    [180, 20.125],
                    [180, 23.75],
                    [180, 27.375],
                    [180, 31],
                    [180, 34.625],
                    [180, 38.25],
                    [180, 41.875],
                    [180, 45.5],
                    [180, 49.125],
                    [180, 52.75],
                    [180, 56.375],
                    [180, 60],
                    [174.375, 60],
                    [168.75, 60],
                    [163.125, 60],
                    [157.5, 60],
                    [151.875, 60],
                    [146.25, 60],
                    [140.625, 60],
                    [135, 60],
                    [129.375, 60],
                    [123.75, 60],
                    [118.125, 60],
                    [112.5, 60],
                    [106.875, 60],
                    [101.25, 60],
                    [95.625, 60],
                    [90, 60],
                    [84.375, 60],
                    [78.75, 60],
                    [73.125, 60],
                    [67.5, 60],
                    [61.875, 60],
                    [56.25, 60],
                    [50.625, 60],
                    [45, 60],
                    [39.375, 60],
                    [33.75, 60],
                    [28.125, 60],
                    [22.5, 60],
                    [16.875, 60],
                    [11.25, 60],
                    [5.625, 60],
                    [0, 60],
                    [-5.625, 60],
                    [-11.25, 60],
                    [-16.875, 60],
                    [-22.5, 60],
                    [-28.125, 60],
                    [-33.75, 60],
                    [-39.375, 60],
                    [-45, 60],
                    [-50.625, 60],
                    [-56.25, 60],
                    [-61.875, 60],
                    [-67.5, 60],
                    [-73.125, 60],
                    [-78.75, 60],
                    [-84.375, 60],
                    [-90, 60],
                    [-95.625, 60],
                    [-101.25, 60],
                    [-106.875, 60],
                    [-112.5, 60],
                    [-118.125, 60],
                    [-123.75, 60],
                    [-129.375, 60],
                    [-135, 60],
                    [-140.625, 60],
                    [-146.25, 60],
                    [-151.875, 60],
                    [-157.5, 60],
                    [-163.125, 60],
                    [-168.75, 60],
                    [-174.375, 60],
                    [-180, 60],
                    [-180, 56.375],
                    [-180, 52.75],
                    [-180, 49.125],
                    [-180, 45.5],
                    [-180, 41.875],
                    [-180, 38.25],
                    [-180, 34.625],
                    [-180, 31],
                    [-180, 27.375],
                    [-180, 23.75],
                    [-180, 20.125],
                    [-180, 16.5],
                    [-180, 12.875],
                    [-180, 9.25],
                    [-180, 5.625],
                    [-180, 2],
                    [-180, -1.625],
                    [-180, -5.25],
                    [-180, -8.875],
                    [-180, -12.5],
                    [-180, -16.125],
                    [-180, -19.75],
                    [-180, -23.375],
                    [-180, -27],
                    [-180, -30.625],
                    [-180, -34.25],
                    [-180, -37.875],
                    [-180, -41.5],
                    [-180, -45.125],
                    [-180, -48.75],
                    [-180, -52.375],
                    [-180, -56]
                  ]
                ]
              ]
            }
          }
        ]

        expect(getCollectionGeoFeatures(metadata)).toEqual(featureCollectionMock)
      })
    })

    describe('when the spatial feature is a point', () => {
      test('returns normalized feature collection', () => {
        const metadata = {
          boxes: null,
          coordinateSystem: 'CARTESIAN',
          lines: null,
          points: ['39.1 -96.6'],
          polygons: null,
          gibsLayers: 'None',
          spatial: null
        }
        // Const responseObject
        expect(getCollectionGeoFeatures(metadata)).toEqual([{
          geometry: {
            coordinates: [[-96.6, 39.1]],
            type: 'MultiPoint'
          },
          properties: {},
          type: 'Feature'
        }])
      })
    })

    describe('when the spatial feature is a polygon', () => {
      test('returns normalized feature collection', () => {
        const metadata = {
          boxes: null,
          coordinateSystem: 'CARTESIAN',
          lines: null,
          points: null,
          polygons: [
            ['0 0 0 10 10 10 10 0 0 0']
          ],
          gibsLayers: 'None',
          spatial: null
        }
        expect(getCollectionGeoFeatures(metadata)).toEqual([
          {
            type: 'Feature',
            properties: {},
            geometry: {
              type: 'MultiPolygon',
              coordinates: [
                [
                  [
                    [0, 0],
                    [10, 0],
                    [10, 1],
                    [10, 2],
                    [10, 4],
                    [10, 5],
                    [10, 6],
                    [10, 7],
                    [10, 8],
                    [10, 10],
                    [9.0001107738, 10.0134664917],
                    [8.0001477653, 10.0239449438],
                    [7.0001293364, 10.0314319717],
                    [6.0000739209, 10.0359251563],
                    [5, 10.0374230459],
                    [3.9999260791, 10.0359251563],
                    [2.9998706636, 10.0314319717],
                    [1.9998522347, 10.0239449438],
                    [0.9998892262, 10.0134664917],
                    [0, 10],
                    [0, 0]
                  ]
                ]
              ]
            }
          }
        ])
      })
    })
  })
})
