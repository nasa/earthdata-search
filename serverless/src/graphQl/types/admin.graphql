type AdminPreferencesEntry {
  "Preference value"
  value: String

  "Percentage of users who selected this preference"
  percentage: String

  "Count of users who selected this preference"
  count: String
}

type AdminPreferencesMetrics {
  "Top panel preferences"
  panelState: [AdminPreferencesEntry]

  "Collection List View preferences"
  collectionListView: [AdminPreferencesEntry]

  "Collection Sort preferences"
  collectionSort: [AdminPreferencesEntry]

  "Granule Sort preferences"
  granuleSort: [AdminPreferencesEntry]

  "Granule List View preferences"
  granuleListView: [AdminPreferencesEntry]

  "Zoom preferences"
  zoom: [AdminPreferencesEntry]

  "Latitude preferences"
  latitude: [AdminPreferencesEntry]

  "Longitude preferences"
  longitude: [AdminPreferencesEntry]

  "Projection preferences"
  projection: [AdminPreferencesEntry]

  "Overlay Layers preferences"
  overlayLayers: [AdminPreferencesEntry]

  "Base Layer preferences"
  baseLayer: [AdminPreferencesEntry]
}

type AdminRetrievalCollections {
  "Unique identifier for the collection"
  id: Int

  "ID of the retrieval this collection belongs to"
  retrievalId: Int

  "Method used to access the collection"
  accessMethod: String

  "ID of the collection"
  collectionId: String

  "Metadata associated with the collection"
  collectionMetadata: String

  "Parameters used to retrieve granules"
  granuleParams: String

  "Count of granules retrieved"
  granuleCount: Int

  "Timestamp of when the collection was last updated"
  updatedAt: DateTime

  "Timestamp of when the collection was created"
  createdAt: DateTime

  "Count of links to granules in the collection"
  granuleLinkCount: Int
}

enum AccessMethodType {
  "ECHO Orders access method"
  ECHO_ORDERS
  "ESI access method"
  ESI
  "OPeNDAP access method"
  OPENDAP
  "Harmony access method"
  HARMONY
  "SWODLR access method"
  SWODLR
}

type ServiceOptionDefinition {
  "Unique identifier for the service option"
  id: String

  "Name of the service option"
  name: String
}

type AccessMethod {
  "Unique identifier for the access method"
  id: Int

  "URL for the access method"
  url: String

  "Form used to access the collection"
  form: String

  "Type of access method"
  type: AccessMethodType

  "The form model"
  model: String

  "Indicates if the access method is valid"
  isValid: Boolean

  "Raw form model used for the access method"
  rawModel: String

  "Timestamp of when the access method was last updated"
  updatedAt: DateTime

  "Digest of the form used for the access method"
  formDigest: String

  "Service option definition for the access method"
  serviceOptionDefinition: ServiceOptionDefinition
}

type AdminRetrievalCollection {
  "ID of the retrieval collection"
  id: Int

  "Method used to access the collection"
  accessMethod: JSON

  "ID of the collection"
  collectionId: String

  "The collection metadata"
  collectionMetadata: JSON

  "Orders associated with the retrieval"
  retrievalOrders: [AdminRetrievalOrder]

  "Count of granules retrieved"
  granuleCount: Int

  "Timestamp of when the collection was last updated"
  updatedAt: DateTime

  "Timestamp of when the collection was created"
  createdAt: DateTime
}

type AdminRetrievalOrder {
  "ID of the retrieval order"
  id: Int

  "State of the retrieval order"
  state: String

  "Order number of the retrieval order"
  orderNumber: String

  "Information about the retrieval order"
  orderInformation: JSON

  "Type of the retrieval order"
  type: String
}

type AdminRetrieval {
  "ID of the retrieval"
  id: Int

  "Obfuscated ID of the retrieval"
  obfuscatedId: String

  "User who initiated the retrieval"
  user: User

  "JSON representation of the retrieval data"
  jsondata: JSON

  "Environment in which the retrieval was made"
  environment: String

  "Collections associated with the retrieval"
  retrievalCollections: [AdminRetrievalCollection]

  "Timestamp of when the retrieval was last updated"
  updatedAt: DateTime

  "Timestamp of when the retrieval was created"
  createdAt: DateTime
}

input AdminRetrievalInput {
  "Obfuscated ID to filter by"
  obfuscatedId: String
}

type AdminRetrievals {
  "List of retrievals"
  adminRetrievals: [AdminRetrieval]

  "Pagination information"
  pageInfo: PageInfo

  "Total count of retrievals"
  count: Int
}

input AdminRetrievalsInput {
  "Sets the number of retrievals to return"
  limit: Int

  "Offset for pagination"
  offset: Int

  "Set the order of the results"
  sortKey: String

  "URS ID to filter by"
  ursId: String

  "Obfuscated ID to filter by"
  obfuscatedId: String

  "Collection ID to filter by"
  retrievalCollectionId: Int
}

type Query {
  "Retrieves admin preferences metrics"
  adminPreferencesMetrics: AdminPreferencesMetrics

  "Retrieves admin retrieval information"
  adminRetrieval(params: AdminRetrievalInput!): AdminRetrieval

  "Retrieves retrievals"
  adminRetrievals(
    params: AdminRetrievalsInput
  ): AdminRetrievals
}
